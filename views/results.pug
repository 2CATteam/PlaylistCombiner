html
	head
		title= session.name + " - Spotify Guessing Game"
		meta(charset="utf-8")
		meta(name="description", content="A game where you guess who listens to what Spotify songs")
		meta(name="viewport", content="width=device-width, initial-scale=1.0")
		link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css", rel="stylesheet", integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH", crossorigin="anonymous")
		link(rel="stylesheet", type="text/css" href="/styles.css")
		script(src="/scripts.js" type="text/javascript")
	body 
		.d-flex.justify-content-center.bg-success.py-3.min-vh-100
			.d-flex.w-100.justify-content-center.align-items-center.py-3#wrapContainer.bg-light.rounded-5
				.d-flex.flex-column
					h2.text-center Your score:
					h2.text-center= `${filled_answers.filter((filled_songs) => filled_songs.correct).length}/${filled_answers.length}`
					button.btn.btn-primary(onclick="savePlaylist()") Save combined playlist to Spotify!
					each song, idx in filled_answers 
						.d-flex.flex-column.align-items-stretch.guess-div(style="min-width: min(456px, 90vw)")
							hr.m-3
							h3= "Song #" + (idx + 1)
							!= song.song_html
							p.d-none= song.song_data
							p(class=song.correct ? "text-success" : "text-danger")= "Your guess: " + song.given_answer.name
							p(class=song.correct ? "text-success" : "text-danger")= "Answer: " + song.correct_answer_string	
					hr.m-3
					button.btn.btn-primary.mb-2(onclick="savePlaylist()") Save combined playlist to Spotify!
					
		script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous") 
		script.
			async function savePlaylist() {
				let me_data = await getRequest("https://api.spotify.com/v1/me", 
					{ Authorization: `Bearer ${getCookie("spotify_token")}` }
				)
				let user_uri = JSON.parse(me_data.responseText).id
				if (!user_uri) {
					console.error(me_data)
					alert("Unable to save playlist - unable to retrieve Spotify User ID")
					return
				}

				let song_uris = []
				let song_list = JSON.parse((await getRequest(`/${session.id}/songs`)).responseText)
				for (let song of song_list) {
					song_uris.push(`spotify:track:${song.song}`)
				}

				let new_playlist = await postRequest(`https://api.spotify.com/v1/users/${user_uri}/playlists`, 
					{
						name: "#{session.name}",
						description: `Created by Spotify Guessing Game - ${window.location.hostname}`,
						public: false
					},
					{ Authorization: `Bearer ${getCookie("spotify_token")}` }
				)
				new_playlist = JSON.parse(new_playlist.responseText)
				let added_items = await postRequest(`https://api.spotify.com/v1/playlists/${new_playlist.id}/tracks`, 
					{
						uris: song_uris
					},
					{ Authorization: `Bearer ${getCookie("spotify_token")}` }
				)
				console.log("Done! Check Spotify!")
				alert("Successfully saved playlist!")
			}
			
			window.onload = () => {
				let token = getCookie("spotify_token")
				let refresh_token = getCookie("refresh_cookie")
				if ((!token) && refresh_token) {
					console.log("Trying to refresh token")
					getRequest(`/#{session.id}/refresh_token`).then((response) => {
						console.log(response)
						if (response.status == 200) {
							console.log(response.responseText)
							location.reload()
						} else {
							console.error(response.responseText)
						}
					}).catch((response) => {
						console.error(response.responseText)
					})
				}
			}
			